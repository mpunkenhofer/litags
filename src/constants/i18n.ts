import { browser } from "webextension-polyfill-ts";

const i = (key: string): string => browser.i18n.getMessage(key);

// Ideally this file can just be automatically created from en.json

export const i18n = {
    no: i('no'),
    yes: i('yes'),
    cancel: i('cancel'),
    export: i('export'),
    import: i('import'),
    backup: i('backup'),
    users: i('users'),
    sets: i('sets'),
    set: i('set'),
    confirm: i('confirm'),
    settings: i('settings'),
    home: i('home'),
    tags: i('tags'),
    tag: i('tag'),
    show: i('show'),
    hide: i('hide'),
    clear: i('clear'),
    display: i('display'),
    delete: i('delete'),
    deleteUser: i('deleteUser'),
    showTags: i('showTags'),
    tagSets: i('tagSets'),
    userTagList: i('userTagList'),
    searchResults: i('searchResults'),
    chooseFile: i('chooseFile'),
    usersFound: i('usersFound'),
    seachBar: i('seachBar'),
    frequentlyUsed: i('frequentlyUsed'),
    frequentlyUsedTags: i('frequentlyUsedTags'),
    searchUsersPlaceHolder: i('searchUsersPlaceholder'),
    searchTagsPlaceHolder: i('searchTagsPlaceholder'),
    deleteUserConfirm: i('deleteUserConfirm'),
    exportNoneSelectedError: i('exportNoneSelectedError'),
    importNoneSelectedError: i('importNoneSelectedError'),
    importJsonFileError: i('importJsonFileError'),
    importSuccess: i('importSuccess'),
    importConfirm: i('importConfirm'),
    imageURL: i('imageURL'),
    symbol: i('symbol'),
    name: i('name'),
    tagName: i('tagName'),
    aliases: i('aliases'),
    color: i('color'),
    uploadImage: i('uploadImage'),
    setName: i('setName'),
    setIconURL: i('setIconURL'),
    addTag: i('addTag'),
    addSet: i('addSet'),
    addNewSet: i('addNewSet'),
    newSet: i('newSet'),
    newTag: i('newTag'),
    noIcon: i('noIcon'),
    importSet: i('importSet'),
    exportSet: i('exportSet'),
    importSetSuccess: i('importSetSuccess'),
    importSetFailure: i('importSetFailure'),
    exportSetFailure: i('exportSetFailure'),
    uploadImageFailure: i('uploadImageFailure'),
    uploadImageTimeout: i('uploadImageTimeout'),
    uploadImageMissingPermisson: i('uploadImageMissingPermisson'),
    removeSelectedTag: i('removeSelectedTag'),
    selectedTag: i('selectedTag'),
    deleteSet: i('deleteSet'),
    deleteSetConfirm: i('deleteSetConfirm'),
    deleteSelectedTag: i('deleteSelectedTag'),
    deleteTagConfirm: i('deleteTagConfirm'),
    addAlias: i('addAlias'),
    removeAlias: i('removeAlias'),
    clearFrequentlyUsedTags: i('clearFrequentlyUsedTags'),
    clearFrequentlyUsedTagsConfirm: i('clearFrequentlyUsedTagsConfirm'),
    defaultTag: i('defaultTag'),
    about: i('about'),
    appDescription: i('appDescription'),
    appDescriptionWithoutLink: i('appDescriptionWithoutLink'),
    goTo: i('goTo'),
    usersSettingDescription: i('usersSettingDescription'),
    aboutSettingsDescription: i('aboutSettingsDescription'),
    aboutTagSetsDescription: i('aboutTagSetsDescription'),
    aboutUsersDescription: i('aboutUsersDescription'),
    aboutBackupDescription: i('aboutBackupDescription'),
    aboutContributionDescription: i('aboutContributionDescription'),
    aboutCommunityDescription: i('aboutCommunityDescription'),
    aboutDonateDescription: i('aboutDonateDescription'),
    contributing: i('contributing'),
    donate: i('donate'),
    community: i('community'),
    discordServer: i('discordServer'),
    settingsTagListLimitTitle: i('settingsTagListLimitTitle'),
    settingsTagListLimitDescription: i('settingsTagListLimitDescription'),
    settingsFrequentlyUsedLimitTitle: i('settingsFrequentlyUsedLimitTitle'),
    settingsFrequentlyUsedLimitDescription: i('settingsFrequentlyUsedLimitDescription'),
    hotkeys: i('hotkeys'),
    settingsHotkeysDescription: i('settingsHotkeysDescription'),
    settingsShowSearchBarDescription: i('settingsShowSearchBarDescription'),
    settingsShowFrequentlyUsedDescription: i('settingsShowFrequentlyUsedDescription'),
    settingsClearFrequentlyUsedTagsDescription: i('settingsClearFrequentlyUsedTagsDescription')
};
